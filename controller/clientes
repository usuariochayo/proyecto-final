const { request, response } = require("express");
const bcryptjs = require("bcryptjs")
const pool = require("../db/connection");
const {modelcliente, updatecliente} = require("../models/clientes");

const getcliente = async (req = request, res = response) => {
 let conn;

 try {
    conn = await pool.getConnection()

    const clientes = await conn.query(modelcliente.queryGetcliente, (error) => {throw new Error(error)})

    if (!clientes) {
        res.status(404).json({msg: "no se encontraron registros"})
        return
    }
    res.json({clientes})
 } catch (error) {
    console.log(error)
    res.status(500).json({error})
 } finally{
    if (conn) {
        conn.end()
    }
 }
}
const getclienteByID = async (req = request, res = response) => {
   const {id} = req.params
   let conn;
  
   try {
      conn = await pool.getConnection()
  
      const [cliente] = await conn.query(modelclientes.queryGetclientesById,[id], (error) => {throw new Error(error)})
  
      if (!cliente) {
          res.status(404).json({msg: `no se encontro registro con el ID ${id}`})
          return
      }
      res.json({cliente})
   } catch (error) {
      console.log(error)
      res.status(500).json({error})
   } finally{
      if (conn) {
          conn.end()
      }
   }
  }
  const deleteclienteByID = async (req = request, res = response) => {
   const {id} = req.params
   let conn;
